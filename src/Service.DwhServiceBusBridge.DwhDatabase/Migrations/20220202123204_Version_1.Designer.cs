// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service.DwhServiceBusBridge.DwhDatabase;

#nullable disable

namespace Service.DwhServiceBusBridge.DwhDatabase.Migrations
{
    [DbContext(typeof(DwhContext))]
    [Migration("20220202123204_Version_1")]
    partial class Version_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("sbus")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyJetWallet.Domain.Prices.BidAsk", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LiquidityProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Ask")
                        .HasColumnType("float");

                    b.Property<double>("Bid")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id", "LiquidityProvider");

                    b.ToTable("JetwalletExternalPrices", "sbus");
                });

            modelBuilder.Entity("Service.Bitgo.DepositDetector.Domain.Models.Deposit", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardLast4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeAssetSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Integration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchingEngineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Network")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetriesCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Txid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WalletId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetWalletCryptoDepositOperation", "sbus");
                });

            modelBuilder.Entity("Service.BitGo.SignTransaction.Domain.Models.SignalBitGoSessionStateUpdate", b =>
                {
                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.ToTable("BitgoSessionUpdateSignal", "sbus");
                });

            modelBuilder.Entity("Service.Bitgo.Webhooks.Domain.Models.SignalBitGoPendingApproval", b =>
                {
                    b.Property<string>("PendingApprovalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("BitgoPendingApprovalSignal", "sbus");
                });

            modelBuilder.Entity("Service.Bitgo.Webhooks.Domain.Models.SignalBitGoTransfer", b =>
                {
                    b.Property<string>("Coin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("BitgoTransferSignal", "sbus");
                });

            modelBuilder.Entity("Service.Bitgo.WithdrawalProcessor.Domain.Models.Withdrawal", b =>
                {
                    b.Property<decimal>("ActualFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ActualFeeAssetSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AssetSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Blockchain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelling")
                        .HasColumnType("bit");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientLang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationWalletId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalSystemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeAssetSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeRefundTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Integration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("LastError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastTs")
                        .HasColumnType("datetime2");

                    b.Property<string>("MatchingEngineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeErrorCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("NotificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefundTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetriesCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("ToAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Txid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkflowState")
                        .HasColumnType("int");

                    b.ToTable("JetWalletCryptoWithdrawalOperation", "sbus");
                });

            modelBuilder.Entity("Service.Bitgo.WithdrawalProcessor.Domain.Models.WithdrawalVerifiedMessage", b =>
                {
                    b.Property<string>("ClientIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WithdrawalProcessId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetWalletCryptoWithdrawalVerification", "sbus");
                });

            modelBuilder.Entity("Service.ChangeBalanceGateway.Grpc.Models.ManualChangeBalanceMessage", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AssetSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Officer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("WalletId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetWalletManualBalanceChangeOperation", "sbus");
                });

            modelBuilder.Entity("Service.DwhServiceBusBridge.DwhDatabase.ClientAuthenticationMessageEntity", b =>
                {
                    b.Property<string>("TraderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestapm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TraderId", "Timestapm");

                    b.ToTable("JetWalletClientAuthentification", "sbus");
                });

            modelBuilder.Entity("Service.DwhServiceBusBridge.DwhDatabase.ClientProfileUpdateMessageEntity", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("BlockresJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("KYCPassed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastTs")
                        .HasColumnType("datetime2");

                    b.Property<string>("OldProfileJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ReferralCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferrerClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status2FA")
                        .HasColumnType("int");

                    b.Property<string>("Status2FEText")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ClientId", "Timestamp", "Id");

                    b.ToTable("JetWalletClientProfileUpdate", "sbus");
                });

            modelBuilder.Entity("Service.DwhServiceBusBridge.DwhDatabase.ClientRegisterFailAlreadyExistsEntity", b =>
                {
                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Timestamp");

                    b.ToTable("JetwalletRegistrationFailedAlreadyExists", "sbus");
                });

            modelBuilder.Entity("Service.DwhServiceBusBridge.DwhDatabase.MeEventEntity", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SequenceNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.ToTable("MeEvent", "sbus");
                });

            modelBuilder.Entity("Service.DwhServiceBusBridge.DwhDatabase.PersonalDataUpdateEntity", b =>
                {
                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TraderId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Timestamp");

                    b.ToTable("JetWalletPersonalDataUpdate", "sbus");
                });

            modelBuilder.Entity("Service.DwhServiceBusBridge.DwhDatabase.SignalCircleTransferEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Json")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CircleTransferSignal", "sbus");
                });

            modelBuilder.Entity("Service.DwhServiceBusBridge.DwhDatabase.TestEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("test_table", "sbus");
                });

            modelBuilder.Entity("Service.DwhServiceBusBridge.DwhDatabase.TokenManagerAuditSessionEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Application")
                        .HasColumnType("int");

                    b.Property<string>("BrandId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceUid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Passed2FA")
                        .HasColumnType("bit");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int");

                    b.Property<string>("PublicKeyBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RootSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SessionJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TokensManagerAuditSession", "sbus");
                });

            modelBuilder.Entity("Service.DwhServiceBusBridge.DwhDatabase.WalletTradeMassageEntity", b =>
                {
                    b.Property<string>("TraderUId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TraderUId", "DateTime");

                    b.ToTable("SpotTrades", "sbus");
                });

            modelBuilder.Entity("Service.FeeShareEngine.Domain.Models.Models.FeePaymentEntity", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CalculationTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastTs")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentOperationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferrerClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferrerWalletId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.ToTable("JetWalletFeeSharesPayment", "sbus");
                });

            modelBuilder.Entity("Service.FeeShareEngine.Domain.Models.Models.FeeShareEntity", b =>
                {
                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConverterWalletId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FeeShareAmountInFeeAsset")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FeeShareAmountInTargetAsset")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeShareAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeShareWalletId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FeeToTargetConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeTransferOperationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastTs")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferralClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferrerClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.ToTable("JetWalletFeeShareTransfer", "sbus");
                });

            modelBuilder.Entity("Service.InternalTransfer.Domain.Models.Transfer", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AssetSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelling")
                        .HasColumnType("bit");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientLang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationWalletId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("LastError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastTs")
                        .HasColumnType("datetime2");

                    b.Property<string>("MatchingEngineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeErrorCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("NotificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefundTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetriesCount")
                        .HasColumnType("int");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkflowState")
                        .HasColumnType("int");

                    b.ToTable("JetWalletTransferPhoneOperation", "sbus");
                });

            modelBuilder.Entity("Service.InternalTransfer.Domain.Models.TransferVerificationMessage", b =>
                {
                    b.Property<string>("ClientIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetWalletTransferPhoneVerification", "sbus");
                });

            modelBuilder.Entity("Service.IntrestManager.Domain.Models.PaidInterestRateMessage", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("PaidInterestRate", "sbus");
                });

            modelBuilder.Entity("Service.Liquidity.Converter.Domain.Models.SwapMessage", b =>
                {
                    b.Property<string>("AccountId1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountId2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetId1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetId2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifferenceAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DifferenceVolumeAbs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Volume1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Volume2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletId1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletId2")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetwalletLiquidityConvertorSwap", "sbus");
                });

            modelBuilder.Entity("Service.Liquidity.Portfolio.Domain.Models.AssetPortfolioTrade", b =>
                {
                    b.Property<string>("AssociateBrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssociateSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BaseAssetPriceInUsd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BaseVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BaseVolumeInUsd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FeeVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuoteAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QuoteAssetPriceInUsd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuoteVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuoteVolumeInUsd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Side")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalReleasePnl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetwalletLiquidityPortfolioTrades", "sbus");
                });

            modelBuilder.Entity("Service.Liquidity.Portfolio.Domain.Models.ChangeBalanceHistory", b =>
                {
                    b.Property<string>("Asset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BalanceBeforeUpdate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VolumeDifference")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WalletName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetwalletLiquidityPortfolioChangebalancehistory", "sbus");
                });

            modelBuilder.Entity("Service.Liquidity.Portfolio.Domain.Models.FeeShareSettlement", b =>
                {
                    b.Property<string>("Asset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("OperationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferrerClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ReleasedPnl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SettlementDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VolumeFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VolumeTo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WalletFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletTo")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetwalletLiquidityPortfolioFeesharesettlement", "sbus");
                });

            modelBuilder.Entity("Service.Liquidity.Portfolio.Domain.Models.ManualSettlement", b =>
                {
                    b.Property<string>("Asset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ReleasedPnl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SettlementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VolumeFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VolumeTo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WalletFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletTo")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetwalletLiquidityPortfolioManualsettlement", "sbus");
                });

            modelBuilder.Entity("Service.Liquidity.PortfolioHedger.Domain.Models.TradeMessage", b =>
                {
                    b.Property<string>("AssociateBrokerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssociateClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssociateSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssociateWalletId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FeeVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Market")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OppositeVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuoteAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Side")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("TradeHedger", "sbus");
                });

            modelBuilder.Entity("Service.Registration.Domain.Models.ClientRegisterMessage", b =>
                {
                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("JetwalletRegistrationSuccess", "sbus");
                });

            modelBuilder.Entity("SimpleTrading.ServiceBus.Models.BidAskServiceBusModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Ask")
                        .HasColumnType("float");

                    b.Property<double>("Bid")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SpotBidAsk", "sbus");
                });
#pragma warning restore 612, 618
        }
    }
}
